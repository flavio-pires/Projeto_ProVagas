<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProVagas</name>
    </assembly>
    <members>
        <member name="M:ProVagas.Controllers.AdministradoresController.Get">
            <summary>
            Listar todos administradores
            </summary>
            <returns> Listar todos administradores</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.GetEmpresa">
            <summary>
            Listar todas empresas através dos administradores
            </summary>
            <returns>Listar todas empresas através dos administradores</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.GetCandidato">
            <summary>
            Listar todos candidatos através dos administradores
            </summary>
            <returns>Listar todos candidatos através dos administradores</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.Get(System.Int32)">
            <summary>
            Listar todos os administradores pelo Id
            </summary>
            <param name="id">Id do administrador que será buscado</param>
            <returns>Retorna uma lista de administrador pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.GetCandidato(System.Int32)">
            <summary>
            Listar os candidatos pelo Id através dos administradores
            </summary>
            <param name="id">Id do cadndaito que será buscado</param>
            <returns>Retorna uma lista de candidatos pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.GetEmpresa(System.Int32)">
            <summary>
            Listar as empresas pelo Id através dos administradores
            </summary>
            <param name="id">Id da empresa que será buscado</param>
            <returns>Retorna uma lista de empresas pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.Post(ProVagas.Domains.Candidato)">
            <summary>
            Cadastrar um novo candidato pelo Id através do administrador
            </summary>
            <param name="cand"></param>
            <returns>Retorna o cadastro de um novo candidato pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.PostAdministrador(ProVagas.Domains.Administrador)">
            <summary>
            Cadastrar um novo administrador
            </summary>
            <param name="adm"></param>
            <returns>Retorna o cadastro de um novo administrador</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.PostEmpresa(ProVagas.Domains.Empresa)">
            <summary>
            Cadastrar uma nova empresa através do administrador
            </summary>
            <param name="emp"></param>
            <returns>Retorna o cadastro de uma nova empresa</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.Put(System.Int32,ProVagas.Domains.Administrador)">
            <summary>
            Atualizar o administrador pelo Id
            </summary>
            <param name="id">Id do administrador que será buscado</param>
            <param name="administrador"></param>
            <returns>Retorna o administrador atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.PutCandidato(System.Int32,ProVagas.Domains.Candidato)">
            <summary>
            Atualizar os candidatos pelo Id através do administrador
            </summary>
            <param name="id">Id do candidato que será buscado</param>
            <param name="can"></param>
            <returns>Retorna o candidato atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.PutEmpresa(System.Int32,ProVagas.Domains.Empresa)">
            <summary>
            Atualizar a empresa pelo Id através do administrador
            </summary>
            <param name="id">Id da empresa que será buscado</param>
            <param name="emp"></param>
            <returns>Retorna a empresa atualizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.Delete(System.Int32)">
            <summary>
            Deleta um administrador pelo Id
            </summary>
            <param name="id">Id do administrador que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.DeleteCandidato(System.Int32)">
            <summary>
            Deletar um candidato pelo Id através do administrador
            </summary>
            <param name="id">Id do candidato que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.AdministradoresController.DeleteEmpresa(System.Int32)">
            <summary>
            Deletar uma empresa pelo Id através do administrador
            </summary>
            <param name="id">Id da empresa que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosController.Get">
            <summary>
            Listar os benefícios
            </summary>
            <returns>Retorna uma lista e um status code 200</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosController.GetById(System.Int32)">
            <summary>
            Buscar um benefício pelo ID
            </summary>
            <param name="id">Id do benefício que será buscado</param>
            <returns>Retorna um benefício específico pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosController.Post(ProVagas.Domains.Beneficio)">
            <summary>
            Cadastrar um novo benefício
            </summary>
            <param name="novoBeneficio">Objeto novoBeneficio que será cadastrado</param>
            <returns>Retorna um status code 201</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosController.Put(System.Int32,ProVagas.Domains.Beneficio)">
            <summary>
            Atualiza um benefício
            </summary>
            <param name="id">Id do benefício que será buscado</param>
            <param name="beneficioAtualizado">Objeto beneficioAtualizado que será alterado</param>
            <returns>Retorna um status code 204</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosController.Delete(System.Int32)">
            <summary>
            Deletar um benefício
            </summary>
            <param name="id">Id do benefício que será buscado</param>
            <returns>Retorna um status code 204</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosXVagasController.Get">
            <summary>
            Listar os benefícios de uma vaga
            </summary>
            <returns>Lista com todos os benefícios da vaga</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosXVagasController.Get(System.Int32)">
            <summary>
            Buscar benefícios por id
            </summary>
            <param name="id">Id do benefício a ser buscado</param>
            <returns>Benefício buscado</returns>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosXVagasController.Post(ProVagas.Domains.BeneficioXvaga)">
            <summary>
            Cadastrar benefícios de uma vaga
            </summary>
            <param name="beneficioVaga">Novos benefícios</param>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosXVagasController.Put(System.Int32,ProVagas.Domains.BeneficioXvaga)">
            <summary>
            Atualizar benefícios de uma vaga
            </summary>
            <param name="id">Id do benefício que será atualizado</param>
            <param name="novoTipo">Benefícos atualizados</param>
        </member>
        <member name="M:ProVagas.Controllers.BeneficiosXVagasController.Delete(System.Int32)">
            <summary>
            Deletar benefícios de uma vaga
            </summary>
            <param name="id">Id dos benefícios que serão deletados</param>
        </member>
        <member name="M:ProVagas.Controllers.CandidatosController.Get">
            <summary>
            Listar os candidatos
            </summary>
            <returns>Lista com todos os candidatos</returns>
        </member>
        <member name="M:ProVagas.Controllers.CandidatosController.Get(System.Int32)">
            <summary>
            Buscar candidatos por id
            </summary>
            <param name="id">Id do benefício a ser buscado</param>
            <returns>Candidato buscado</returns>
        </member>
        <member name="M:ProVagas.Controllers.CandidatosController.Post(ProVagas.Domains.Candidato)">
            <summary>
            Cadastrar um novo candidato
            </summary>
            <param name="candidato"></param>
            <returns>Retorna o cadastro de um novo candidato</returns>
        </member>
        <member name="M:ProVagas.Controllers.CandidatosController.Put(System.Int32,ProVagas.Domains.Candidato)">
            <summary>
            Atualizar um candidato pelo Id
            </summary>
            <param name="id">Id do candidato que será buscado</param>
            <param name="Candidatoatt"></param>
            <returns>Retorna o candidato atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.CandidatosController.Delete(System.Int32)">
            <summary>
            Deletar um candidato pelo Id
            </summary>
            <param name="id">Id do candidato que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.CidadesController.Get">
            <summary>
            Listar todas as cidades
            </summary>
            <returns>Retorna uma lista de cidades</returns>
        </member>
        <member name="M:ProVagas.Controllers.CidadesController.Post(ProVagas.Domains.Cidade)">
            <summary>
            Cadastrar uma nova cidade
            </summary>
            <param name="novacidade"></param>
            <returns>Retorna o cadastro de uma nova cidade</returns>
        </member>
        <member name="M:ProVagas.Controllers.CidadesController.Put(System.Int32,ProVagas.Domains.Cidade)">
            <summary>
            Atualizar uma cidade pelo Id
            </summary>
            <param name="id">Id da cidade que será buscado</param>
            <param name="cidadeAtualizada"></param>
            <returns>Retorna uma cidade atualizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.CidadesController.Delete(System.Int32)">
            <summary>
            Deletar uma cidade pelo Id
            </summary>
            <param name="id">Id da cidade que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosExtrasCurriculares.Get">
            <summary>
            Listar todos os cursos extracurriculares
            </summary>
            <returns>Retorna uma lista dos cursos extracurriculares</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosExtrasCurriculares.Get(System.Int32)">
            <summary>
            Listar os cursos extracurriculares pelo Id
            </summary>
            <param name="id">Id do curso extracurricular que será buscado</param>
            <returns>Retorna um curso extracurricular pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosExtrasCurriculares.Post(ProVagas.Domains.CursoExtraCurricular)">
            <summary>
            Cadastrar um novo curso extracurricular
            </summary>
            <param name="curso"></param>
            <returns>Retorna um cadastro de um novo curso extracurricular</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosExtrasCurriculares.Put(System.Int32,ProVagas.Domains.CursoExtraCurricular)">
            <summary>
            Alterar um curso extracurricular pelo Id
            </summary>
            <param name="id">Id do curso extracurricular que será buscado</param>
            <param name="cursoadd"></param>
            <returns>Retorna um curso extracurricular atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosExtrasCurriculares.Delete(System.Int32)">
            <summary>
            Deletar um curso extracurricular pelo Id
            </summary>
            <param name="id">Id do curso extracurricular que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosSenaiController.Get">
            <summary>
            Listar todos os cursos do SENAI
            </summary>
            <returns>Retorna uma lista com todos os cursos do SENAI</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosSenaiController.Get(System.Int32)">
            <summary>
            Listar os cursos do SENAI pelo Id
            </summary>
            <param name="id">Id do curso do SENAI que será buscado</param>
            <returns>Retorna uma lista dos cursos do SENAI pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosSenaiController.Post(ProVagas.Domains.CursoSenai)">
            <summary>
            Cadastrar um novo curso do SENAI
            </summary>
            <param name="curso"></param>
            <returns>Retorna um cadastro de um novo curso do SENAI</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosSenaiController.Put(System.Int32,ProVagas.Domains.CursoSenai)">
            <summary>
            Alterar um curso do SENAI pelo Id
            </summary>
            <param name="id">Id do curso do SENAI que será buscado</param>
            <param name="cursoadd"></param>
            <returns>Retorna um curso do SENAI atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.CursosSenaiController.Delete(System.Int32)">
            <summary>
            Deletar um curso do SENAI pelo Id
            </summary>
            <param name="id">Id do curso do SENAI que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.EmpresasController.Get">
            <summary>
            Listar os empresa
            </summary>
            <returns>Lista com todos os empresa</returns>
        </member>
        <member name="M:ProVagas.Controllers.EmpresasController.Get(System.Int32)">
            <summary>
            Buscar empresa por id
            </summary>
        </member>
        <member name="M:ProVagas.Controllers.EmpresasController.Post(ProVagas.Domains.Empresa)">
            <summary>
            Cadastrar um novo candidato
            </summary>
        </member>
        <member name="M:ProVagas.Controllers.EmpresasController.Put(System.Int32,ProVagas.Domains.Empresa)">
            <summary>
            Atualizar candidato
            </summary>
        </member>
        <member name="M:ProVagas.Controllers.EmpresasController.Delete(System.Int32)">
            <summary>
            Deletar candidato
            </summary>
        </member>
        <member name="M:ProVagas.Controllers.EnderecoController.Get">
            <summary>
            Listar todos os endereços 
            </summary>
            <returns>Retorna uma lista com os endereços</returns>
        </member>
        <member name="M:ProVagas.Controllers.EnderecoController.Get(System.Int32)">
            <summary>
            Listar endereços pelo Id
            </summary>
            <param name="id">Id do endereço que será buscado</param>
            <returns>Retorna uma lista de endereços pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.EnderecoController.Post(ProVagas.Domains.Endereco)">
            <summary>
            Cadastrar um novo endereço
            </summary>
            <param name="ende"></param>
            <returns>Retorna o cadastro de um novo endereço</returns>
        </member>
        <member name="M:ProVagas.Controllers.EnderecoController.Put(System.Int32,ProVagas.Domains.Endereco)">
            <summary>
            Atualizar um endereço pelo Id
            </summary>
            <param name="id">Id do endereço que será buscado</param>
            <param name="enderecoatt"></param>
            <returns>Retorna o endereço atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.EnderecoController.Delete(System.Int32)">
            <summary>
            Deletar um endereço pelo Id
            </summary>
            <param name="id">Id do endereço que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstadosController.Get">
            <summary>
            Listar todos os estados
            </summary>
            <returns>Retorna uma lista com os estados</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstadosController.Post(ProVagas.Domains.Estado)">
            <summary>
            Cadastrar um novo estado
            </summary>
            <param name="novoestado"></param>
            <returns></returns>
        </member>
        <member name="M:ProVagas.Controllers.EstadosController.Put(System.Int32,ProVagas.Domains.Estado)">
            <summary>
            Atualizar um estado pelo Id
            </summary>
            <param name="id">Id do estado que será buscado</param>
            <param name="estadoAtualizado"></param>
            <returns>Retorna o estado atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstadosController.Delete(System.Int32)">
            <summary>
            Deletar um estado pelo Id
            </summary>
            <param name="id">Id do estado que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstagiosController.Get">
            <summary>
            Listar os estagios
            </summary>
            <returns>Retorna uma lista e um status code 200</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstagiosController.GetById(System.Int32)">
            <summary>
            Buscar um estágio pelo ID
            </summary>
            <param name="id">Id do estágio que será buscado</param>
            <returns>Retorna um estágio específico pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstagiosController.Post(ProVagas.Domains.Estagio)">
            <summary>
            Cadastrar um novo estágio
            </summary>
            <param name="novoEstagio">Objeto novoEstagio que será cadastrado</param>
            <returns>Retorna um status code 201</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstagiosController.Put(System.Int32,ProVagas.Domains.Estagio)">
            <summary>
            Atualiza um estágio
            </summary>
            <param name="id">Id do estágio que será buscado</param>
            <param name="estagioAtualizado">Objeto estagioAtualizado que será alterado</param>
            <returns>Retorna um status code 204</returns>
        </member>
        <member name="M:ProVagas.Controllers.EstagiosController.Delete(System.Int32)">
            <summary>
            Deletar um estágio
            </summary>
            <param name="id">Id do estágio que será buscado</param>
            <returns>Retorna um status code 204</returns>
        </member>
        <member name="M:ProVagas.Controllers.ExperienciasProfissionaisController.Get">
            <summary>
            Listar as experiencias profissionais do candidato
            </summary>
            <returns>Retorna uma lista das experiencias profissionais</returns>
        </member>
        <member name="M:ProVagas.Controllers.ExperienciasProfissionaisController.Get(System.Int32)">
            <summary>
            Listar as experiencias profissionais do candidato pelo Id
            </summary>
            <param name="id">Id da experiencia profissional que será buscado</param>
            <returns>Retorna uma lista de experiencias profissionais pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.ExperienciasProfissionaisController.Post(ProVagas.Domains.ExperienciaProfissional)">
            <summary>
            Cadastrar uma nova experiencia profissional
            </summary>
            <param name="exp"></param>
            <returns>Retorna o cadastro de uma nova experiencia profissional</returns>
        </member>
        <member name="M:ProVagas.Controllers.ExperienciasProfissionaisController.Put(System.Int32,ProVagas.Domains.ExperienciaProfissional)">
            <summary>
            Atualizar uma experiencia profissional pelo Id
            </summary>
            <param name="id">Id da experiencia profissional que será buscado</param>
            <param name="experiAtt"></param>
            <returns>Retorna uma experiência profissional atualizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.ExperienciasProfissionaisController.Delete(System.Int32)">
            <summary>
            Deletar uma experiencia profissional pelo Id
            </summary>
            <param name="id">Id da experiencia profissional que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.GenerosController.Get">
            <summary>
            Listar todos os generos
            </summary>
            <returns>Retorna uma lista com os generos</returns>
        </member>
        <member name="M:ProVagas.Controllers.GenerosController.Get(System.Int32)">
            <summary>
            Retorna uma lista de generos por Id
            </summary>
            <param name="id">Id do genero que será buscado</param>
            <returns>Retorna uma lista de generos por Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.GenerosController.Post(ProVagas.Domains.Genero)">
            <summary>
            Cadastrar um novo genero
            </summary>
            <param name="genero"></param>
            <returns>Retorna o cadastro de um novo genero</returns>
        </member>
        <member name="M:ProVagas.Controllers.GenerosController.Put(System.Int32,ProVagas.Domains.Genero)">
            <summary>
            Atualizar um genero pelo Id
            </summary>
            <param name="id">Id do genero que será buscado</param>
            <param name="generocadastrado"></param>
            <returns>Retorna o genero atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.GenerosController.Delete(System.Int32)">
            <summary>
            Deletar um genero pelo Id
            </summary>
            <param name="id">Id do genero que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesController.Get">
            <summary>
            Lista todas as habilidades
            </summary>
            <returns>Uma lista de habilidades</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesController.GetById(System.Int32)">
            <summary>
            Busca uma habilidade através do ID
            </summary>
            <param name="id">ID da habilidade que será buscada</param>
            <returns>A habilidade buscada e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesController.Post(ProVagas.Domains.Habilidade)">
            <summary>
            Cadastra uma nova habilidade
            </summary>
            <param name="novaHabilidade">Objeto contendo as informações da nova habilidade</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesController.Put(System.Int32,ProVagas.Domains.Habilidade)">
            <summary>
            Atualiza uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será atualizada</param>
            <param name="habilidadeAtualizada">Objeto contendo as novas informações da habilidade</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesController.Delete(System.Int32)">
            <summary>
            Deleta uma habilidade existente
            </summary>
            <param name="id">ID da habilidade que será deletada</param>
            <returns>Um status code 202 - Accepted</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesXCandidatosController.Get">
            <summary>
            Lista todas as habilidades do candidato
            </summary>
            <returns>Uma lista de habilidades do candidato</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesXCandidatosController.GetById(System.Int32)">
            <summary>
            Busca uma habilidade de um candidato através do ID
            </summary>
            <param name="id">ID da habilidadeXcandidato que será buscada</param>
            <returns>A habilidade buscada e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesXCandidatosController.Put(System.Int32,ProVagas.Domains.HabilidadeXcandidato)">
            <summary>
            Atualiza uma habilidadeXcandidato existente
            </summary>
            <param name="id">ID da habilidade que será atualizada</param>
            <param name="habilidadeXCandidatoAtualizada">Objeto contendo as novas informações da habilidade</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.HabilidadesXCandidatosController.Delete(System.Int32)">
            <summary>
            Deleta uma habilidadeXcandidato existente
            </summary>
            <param name="id">ID da habilidade que será deletada</param>
            <returns>Um status code 202 - Accepted</returns>
        </member>
        <member name="M:ProVagas.Controllers.IdiomasController.Get">
            <summary>
            Listar todos os idiomas
            </summary>
            <returns>Retorna uma lista de idiomas</returns>
        </member>
        <member name="M:ProVagas.Controllers.IdiomasController.Get(System.Int32)">
            <summary>
            Listar idiomas por Id
            </summary>
            <param name="id">Id do idioma que será buscado</param>
            <returns>Retorna uma lista de idiomas por Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.IdiomasController.Post(ProVagas.Domains.Idioma)">
            <summary>
            Cadastrar um novo idioma
            </summary>
            <param name="idioma"></param>
            <returns>Retorna o cadastro de um novo idioma</returns>
        </member>
        <member name="M:ProVagas.Controllers.IdiomasController.Put(System.Int32,ProVagas.Domains.Idioma)">
            <summary>
            Atualizar um idioma pelo Id
            </summary>
            <param name="id">Id do idioma que será buscado</param>
            <param name="idiomaatt"></param>
            <returns>Retorna o idioma atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.IdiomasController.Delete(System.Int32)">
            <summary>
            Deletar um idioma pelo Id
            </summary>
            <param name="id"></param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.InscricoesController.Get">
            <summary>
            Lista todas as inscrições
            </summary>
            <returns>Uma lista de inscrições e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.InscricoesController.GetById(System.Int32)">
            <summary>
            Busca uma inscrição através do ID
            </summary>
            <param name="id">ID da inscrição que será buscada</param>
            <returns>A inscrição buscada e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.InscricoesController.Post(ProVagas.Domains.Inscricao)">
            <summary>
            Cadastra uma nova inscrição
            </summary>
            <param name="novaInscricao">Objeto contendo as informações da nova inscrição</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.InscricoesController.Put(System.Int32,ProVagas.Domains.Inscricao)">
            <summary>
            Atualiza uma inscrição existente
            </summary>
            <param name="id">ID da inscrição que será atualizada</param>
            <param name="inscricaoAtualizada">Objeto com as informações atualizadas da inscrição</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.InscricoesController.Delete(System.Int32)">
            <summary>
            Deleta uma inscrição existente
            </summary>
            <param name="id">ID da inscrição que será deletada</param>
            <returns>Um status code 202 - Accepted</returns>
        </member>
        <member name="M:ProVagas.Controllers.LoginController.Post(ProVagas.ViewModels.LoginViewModels)">
            <summary>
            Realizar login
            </summary>
            <param name="login"></param>
            <returns>Retorna o token do login</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisEscolaridadesController.Get">
            <summary>
            Listar todos os niveis de escolaridade
            </summary>
            <returns>Retorna uma lista com os niveis de escolaridade</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisEscolaridadesController.Get(System.Int32)">
            <summary>
            Listar uma lista de niveis de escolaridade pelo Id
            </summary>
            <param name="id">Id dos niveis de escolaridade que será buscado</param>
            <returns>Retorna uma lista de niveis de escolaridade pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisEscolaridadesController.Post(ProVagas.Domains.NivelEscolaridade)">
            <summary>
            Cadastrar um novo nivel de escolaridade
            </summary>
            <param name="nivel"></param>
            <returns>Retorna o cadastro de um novo nivel de escolaridade</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisEscolaridadesController.Put(System.Int32,ProVagas.Domains.NivelEscolaridade)">
            <summary>
            Atualizar um nivel de escolaridade pelo Id
            </summary>
            <param name="id">Id dos niveis de escolaridade que será buscado</param>
            <param name="nivelcadastrado"></param>
            <returns>Retorna um nivel de escolaridade atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisEscolaridadesController.Delete(System.Int32)">
            <summary>
            Deletar um nivel de escolaridade pelo Id
            </summary>
            <param name="id">Id dos niveis de escolaridade que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisIdiomasController.Get">
            <summary>
            Listar todos os niveis de idioma
            </summary>
            <returns>Retorna uma lista com todos os niveis de idioma</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisIdiomasController.Get(System.Int32)">
            <summary>
            Listar todos os niveis de idioma por Id
            </summary>
            <param name="id">Id do nivel de idioma que será buscado</param>
            <returns>Retorna uma lista dos niveis de idioma por Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisIdiomasController.Post(ProVagas.Domains.NivelIdioma)">
            <summary>
            Cadastrar um novo nivel de idioma
            </summary>
            <param name="nivel"></param>
            <returns>Retorna o cadastro de um novo nivel de idioma</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisIdiomasController.Put(System.Int32,ProVagas.Domains.NivelIdioma)">
            <summary>
            Atualizar um nivel de idioma pelo Id
            </summary>
            <param name="id">Id do nivel de idioma que será buscado</param>
            <param name="nivelcadastrado"></param>
            <returns>Retorna um nivel de idioma atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.NiveisIdiomasController.Delete(System.Int32)">
            <summary>
            Deletar um nivel de idioma pelo Id
            </summary>
            <param name="id">Id do nivel de idioma que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.PCDsController.Get">
            <summary>
            Listar as pcds 
            </summary>
            <returns>Retorna uma lista com as pcds</returns>
        </member>
        <member name="M:ProVagas.Controllers.PCDsController.Get(System.Int32)">
            <summary>
            Listar pcds por Id
            </summary>
            <param name="id">Id da pcd que será buscado</param>
            <returns>Retorna uma lista de pcds por Ids</returns>
        </member>
        <member name="M:ProVagas.Controllers.PCDsController.Post(ProVagas.Domains.Pcd)">
            <summary>
            Cadastrar uma novo pcd
            </summary>
            <param name="pcd"></param>
            <returns>Retorna uma nova pcd cadastrada</returns>
        </member>
        <member name="M:ProVagas.Controllers.PCDsController.Put(System.Int32,ProVagas.Domains.Pcd)">
            <summary>
            Atualizar uma pcd pelo id
            </summary>
            <param name="id">Id da pcd que será buscado</param>
            <param name="pcdatt"></param>
            <returns></returns>
        </member>
        <member name="M:ProVagas.Controllers.PCDsController.Delete(System.Int32)">
            <summary>
            Deletar uma pcd pelo id
            </summary>
            <param name="id">Id da pcd que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.PcsdsXCandidatosController.Get">
            <summary>
            Listar todos os gêneros
            </summary>
            <returns>Retorna uma lista com todos os gêneros</returns>
        </member>
        <member name="M:ProVagas.Controllers.PcsdsXCandidatosController.Get(System.Int32)">
            <summary>
            Retorna uma lista de gêneros por Id
            </summary>
            <param name="id">Id do gênero que será buscado</param>
            <returns>Retorna uma lista de gêneros por Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.PcsdsXCandidatosController.Post(ProVagas.Domains.PcdXcandidato)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="pcdXcand"></param>
            <returns>Retorna o cadastro finalizado de um novo gênero</returns>
        </member>
        <member name="M:ProVagas.Controllers.PcsdsXCandidatosController.Put(System.Int32,ProVagas.Domains.PcdXcandidato)">
            <summary>
            Atualizar um gênero por id
            </summary>
            <param name="id">Id do gênero que será buscado</param>
            <param name="pcd"></param>
            <returns>Retorna um gênero atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.PcsdsXCandidatosController.Delete(System.Int32)">
            <summary>
            Deletar um gênero pelo id
            </summary>
            <param name="id">Id do gênero que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.PortesEmpresasController.Get">
            <summary>
            Listar todos os portes das empresas
            </summary>
            <returns>Retorna uma lista dos portes das empresas</returns>
        </member>
        <member name="M:ProVagas.Controllers.PortesEmpresasController.Get(System.Int32)">
            <summary>
            Listar os portes das empresas por Id
            </summary>
            <param name="id">Id do porte que será buscado</param>
            <returns>Retorna os portes das empresas por Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.PortesEmpresasController.Post(ProVagas.Domains.PorteEmpresa)">
            <summary>
            Cadastrar um novo porte
            </summary>
            <param name="porte"></param>
            <returns>Retorna o cadastro finalizado de um novo porte</returns>
        </member>
        <member name="M:ProVagas.Controllers.PortesEmpresasController.Put(System.Int32,ProVagas.Domains.PorteEmpresa)">
            <summary>
            Alterar um porte
            </summary>
            <param name="id">Id do porte que será buscado</param>
            <param name="porte"></param>
            <returns>Retorna o porte atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.PortesEmpresasController.Delete(System.Int32)">
            <summary>
            Deletar um porte
            </summary>
            <param name="id">Id do porte que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosController.Get">
            <summary>
            Lsitar todos os requisitos
            </summary>
            <returns>Retorna uma lista com os requisitos</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosController.Get(System.Int32)">
            <summary>
            Listar os requisitos pelo Id
            </summary>
            <param name="id">Id do requisito que será buscado</param>
            <returns>Retorna uma lista com os requisitos pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosController.Post(ProVagas.Domains.Requisito)">
            <summary>
            Cadastrar um novo requisito
            </summary>
            <param name="requisito"></param>
            <returns>Retorna o cadastro de um novo requisito</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosController.Put(System.Int32,ProVagas.Domains.Requisito)">
            <summary>
            Atualizar um requisito pelo Id
            </summary>
            <param name="id">Id do requisito que será buscado</param>
            <param name="requisitocadastrado"></param>
            <returns>Retorna um requisito atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosController.Delete(System.Int32)">
            <summary>
            Deletar um requisito pelo Id
            </summary>
            <param name="id">Id do requisito que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosXVagasController.Get">
            <summary>
            Listar os requisitos e as vagas
            </summary>
            <returns>Retorna uma lista com os requisitos e as vagas</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosXVagasController.Get(System.Int32)">
            <summary>
            Listar os requisitos e vagas pelo Id
            </summary>
            <param name="id">Id do requisitoXvaga que será buscado</param>
            <returns>Retorna uma lista com os requisitosXvagas pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosXVagasController.Post(ProVagas.Domains.RequisitoXvaga)">
            <summary>
            Cadastrar um novo requisitoXvaga
            </summary>
            <param name="requisitoxvaga"></param>
            <returns>Retorna o cadastro de um novo requisitoXvaga</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosXVagasController.Put(System.Int32,ProVagas.Domains.RequisitoXvaga)">
            <summary>
            Atualizar um requisitoXvaga pelo Id
            </summary>
            <param name="id">Id do requisitoXvaga que será buscado</param>
            <param name="requisitoxvagaCadastrado"></param>
            <returns>Retorna o requisitoXvaga atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.RequisitosXVagasController.Delete(System.Int32)">
            <summary>
            Deletar um requisitoXvaga pelo Id
            </summary>
            <param name="id">Id do requisitoXvaga que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusEstagiosController.Get">
            <summary>
            Listar todos os status de estagio
            </summary>
            <returns>Retorna uma lista com os status de estagio</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusEstagiosController.Post(ProVagas.Domains.StatusEstagio)">
            <summary>
            Cadastrar um novo status de estagio 
            </summary>
            <param name="novostatusEstagios"></param>
            <returns>Retorna o cadastro de um novo status de estagio</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusEstagiosController.Put(System.Int32,ProVagas.Domains.StatusEstagio)">
            <summary>
            Atualizar um status de estagio pelo Id
            </summary>
            <param name="id">Id do status de estágio que será buscado</param>
            <param name="statusEstagioAtualizado"></param>
            <returns>Retorna o status de estagio atualizado pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusEstagiosController.Delete(System.Int32)">
            <summary>
            Deletar o status de estágio pelo Id
            </summary>
            <param name="id">Id do status do estágio que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusInscricoesController.Get">
            <summary>
            Lista todos os status de inscrição
            </summary>
            <returns>Uma lista de status de inscrições e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusInscricoesController.GetById(System.Int32)">
            <summary>
            Busca um status de inscrição através do ID
            </summary>
            <param name="id">ID do status de inscrição que será buscado</param>
            <returns>O status de inscrição buscado e um status code 200 - Ok</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusInscricoesController.Post(ProVagas.Domains.StatusInscricao)">
            <summary>
            Cadastra um novo status de inscrição
            </summary>
            <param name="novoStatusInscricao">Objeto contendo as informações do novo status de inscrição</param>
            <returns>Um status code Ok e uma mensagem personalizada</returns>
        </member>
        <member name="M:ProVagas.Controllers.StatusInscricoesController.Delete(System.Int32)">
            <summary>
            Deleta um status de inscrição existente
            </summary>
            <param name="id">ID do status de inscrição que será deletado</param>
            <returns>Um status code 202 - Accepted</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposUsuariosController.Get">
            <summary>
            Listar todos os tipos de usuario
            </summary>
            <returns>Retorna uma lista com os tipos de usuario</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposUsuariosController.Get(System.Int32)">
            <summary>
            Listar os tipos de usuario pelo Id
            </summary>
            <param name="id">Id do tipo de usuario que será buscado</param>
            <returns>Retorna uma lista de tipos de usuario pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposUsuariosController.Post(ProVagas.Domains.TipoUsuario)">
            <summary>
            Cadastrar um novo tipo de usuario
            </summary>
            <param name="tipouser"></param>
            <returns>Retorna o cadastro de um novo tipo de usuario</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposUsuariosController.Put(System.Int32,ProVagas.Domains.TipoUsuario)">
            <summary>
            Atualizar um tipo de usuario pelo Id
            </summary>
            <param name="id">Id do tipo de usuario que será buscado</param>
            <param name="tipoUsercadastrado"></param>
            <returns>Retorna o tipo de usuario atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposUsuariosController.Delete(System.Int32)">
            <summary>
            Deletar um tipo de usuario pelo Id
            </summary>
            <param name="id">Id do tipo de usuario que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposVagasController.Get">
            <summary>
            Listar todos os tipos de vagas
            </summary>
            <returns>Lista com todos os tipos de vagas</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposVagasController.Get(System.Int32)">
            <summary>
            Buscar um tipo de vaga por Id
            </summary>
            <param name="id">Id do tipo a ser buscado</param>
            <returns>Um tipo de Vaga</returns>
        </member>
        <member name="M:ProVagas.Controllers.TiposVagasController.Post(ProVagas.Domains.TipoVaga)">
            <summary>
            Cadastrar um novo tipo de vaga
            </summary>
            <param name="tipoVaga">Novo tipo de vaga</param>
        </member>
        <member name="M:ProVagas.Controllers.TiposVagasController.Put(System.Int32,ProVagas.Domains.TipoVaga)">
            <summary>
            Atualizar um tipo de vaga
            </summary>
            <param name="id">Id do tipo de vaga a ser atualizado</param>
            <param name="novoTipo">Tipo de vaga atualizado</param>
        </member>
        <member name="M:ProVagas.Controllers.TiposVagasController.Delete(System.Int32)">
            <summary>
            Deletar um tipo de vaga
            </summary>
            <param name="id">Id do tipo que será deletado</param>
        </member>
        <member name="M:ProVagas.Controllers.UsuariosController.Get">
            <summary>
            Listar todos os usuarios
            </summary>
            <returns>Retorna uma lista com os usuarios</returns>
        </member>
        <member name="M:ProVagas.Controllers.UsuariosController.Get(System.Int32)">
            <summary>
            Listar todos os usuarios pelo Id
            </summary>
            <param name="id">Id do usuario que será buscado</param>
            <returns>Retorna uma lista de usuarios pelo Id</returns>
        </member>
        <member name="M:ProVagas.Controllers.UsuariosController.Post(ProVagas.Domains.Usuario)">
            <summary>
            Cadastrar um novo usuario
            </summary>
            <param name="usuario"></param>
            <returns>Retorna o cadastro de um novo usuario</returns>
        </member>
        <member name="M:ProVagas.Controllers.UsuariosController.Put(System.Int32,ProVagas.Domains.Usuario)">
            <summary>
            Atualizar um usuario pelo Id
            </summary>
            <param name="id">Id do usuario que será buscado</param>
            <param name="usuarioAtualizado"></param>
            <returns>Retorna o usuario atualizado</returns>
        </member>
        <member name="M:ProVagas.Controllers.UsuariosController.Delete(System.Int32)">
            <summary>
            Deletar um usuario pelo Id
            </summary>
            <param name="id">Id do usuario que será buscado</param>
            <returns>Retorna vazio</returns>
        </member>
        <member name="M:ProVagas.Controllers.VagasController.Get">
            <summary>
            Listar todas as vagas
            </summary>
            <returns>Lista com todas as vagas</returns>
        </member>
        <member name="M:ProVagas.Controllers.VagasController.Get(System.Int32)">
            <summary>
            Buscar uma vaga por id
            </summary>
            <param name="id">Id da vaga a ser buscada</param>
            <returns>Vaga buscada</returns>
        </member>
        <member name="M:ProVagas.Controllers.VagasController.Post(ProVagas.Domains.Vaga)">
            <summary>
            Cadastrar uma nova vaga
            </summary>
            <param name="vaga">Nova vaga</param>
        </member>
        <member name="M:ProVagas.Controllers.VagasController.Put(System.Int32,ProVagas.Domains.Vaga)">
            <summary>
            Atualizar dados da vaga
            </summary>
            <param name="id">Id da vaga que será atualizada</param>
            <param name="novaVaga">Dados da atualizados da vaga</param>
        </member>
        <member name="M:ProVagas.Controllers.VagasController.Delete(System.Int32)">
            <summary>
            Deletar uma vaga
            </summary>
            <param name="id">Id da vaga que será deletada</param>
        </member>
        <member name="T:ProVagas.Interfaces.IInscricaoRepository">
            <summary>
            Interface responsável pelo InscricaoRepository
            </summary>
        </member>
        <member name="M:ProVagas.Interfaces.IInscricaoRepository.Listar">
            <summary>
            Lista todas as inscrições
            </summary>
            <returns>Uma lista de inscrições</returns>
        </member>
        <member name="M:ProVagas.Interfaces.IInscricaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma inscrição através do Id
            </summary>
            <param name="id">Id da inscrição que será buscada</param>
            <returns>Uma inscrição buscada</returns>
        </member>
        <member name="M:ProVagas.Interfaces.IInscricaoRepository.Cadastrar(ProVagas.Domains.Inscricao)">
            <summary>
            Cadastra uma nova inscrição
            </summary>
            <param name="novaInscricao">Objeto contendo as informações da nova inscrição</param>
        </member>
        <member name="M:ProVagas.Interfaces.IInscricaoRepository.Atualizar(System.Int32,ProVagas.Domains.Inscricao)">
            <summary>
            Atualiza uma inscrição
            </summary>
            <param name="id">Id da inscrição que será atualizada</param>
            <param name="inscricaoAtualizada">Objeto com as informações atualizadas</param>
        </member>
        <member name="M:ProVagas.Interfaces.IInscricaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma incrição existente
            </summary>
            <param name="id">Id da inscrição que será deletada</param>
        </member>
        <member name="T:ProVagas.Interfaces.IStatusInscricaoRepository">
            <summary>
            Interface responsável pelo StatusInscricaoRepository
            </summary>
        </member>
        <member name="M:ProVagas.Interfaces.IStatusInscricaoRepository.Listar">
            <summary>
            Lista todos os status de inscrição
            </summary>
            <returns>Uma lista de status de inscrição</returns>
        </member>
        <member name="M:ProVagas.Interfaces.IStatusInscricaoRepository.Cadastrar(ProVagas.Domains.StatusInscricao)">
            <summary>
            Cadastra um novo Status de inscrição
            </summary>
            <param name="novoStatusInscricao">Objeto contendo as informações do novo status de inscrição</param>
        </member>
        <member name="M:ProVagas.Interfaces.IStatusInscricaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um status de inscrição existente
            </summary>
            <param name="id">Id do status de inscrição que será deletado</param>
        </member>
        <member name="M:ProVagas.Interfaces.IStatusInscricaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um status de inscrição através do ID
            </summary>
            <param name="id">ID do status de inscrição que será buscado</param>
            <returns>O status de inscrição buscado</returns>
        </member>
        <member name="T:ProVagas.Repositories.InscricaoRepository">
            <summary>
            Repositório responsável pelas inscrições
            </summary>
        </member>
        <member name="F:ProVagas.Repositories.InscricaoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:ProVagas.Repositories.InscricaoRepository.Atualizar(System.Int32,ProVagas.Domains.Inscricao)">
            <summary>
            Atualiza uma inscrição existente
            </summary>
            <param name="id">Id da inscrição que será atualizada</param>
            <param name="inscricaoAtualizada">Objeto com as novas informações</param>
        </member>
        <member name="M:ProVagas.Repositories.InscricaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca uma inscrição através do Id
            </summary>
            <param name="id">Id da inscrição que será buscada</param>
            <returns>A inscrição buscada</returns>
        </member>
        <member name="M:ProVagas.Repositories.InscricaoRepository.Cadastrar(ProVagas.Domains.Inscricao)">
            <summary>
            Cadastra uma nova inscrição
            </summary>
            <param name="novaInscricao">Objeto contendo as informações da nova inscrição</param>
        </member>
        <member name="M:ProVagas.Repositories.InscricaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma inscrição existente
            </summary>
            <param name="id">Id da inscrição que será deletada</param>
        </member>
        <member name="M:ProVagas.Repositories.InscricaoRepository.Listar">
            <summary>
            Lista todas as inscrições
            </summary>
            <returns>Uma lista de inscrições</returns>
        </member>
        <member name="T:ProVagas.Repositories.StatusInscricaoRepository">
            <summary>
            Repositório responsável pelo StatusInscricaoRepository
            </summary>
        </member>
        <member name="F:ProVagas.Repositories.StatusInscricaoRepository.ctx">
            <summary>
            Objeto contexto por onde serão chamados os métodos do EF Core
            </summary>
        </member>
        <member name="M:ProVagas.Repositories.StatusInscricaoRepository.Cadastrar(ProVagas.Domains.StatusInscricao)">
            <summary>
            Cadastra um novo status de inscrição
            </summary>
            <param name="novoStatusInscricao">Objeto contendo as informações do novo status de inscrição</param>
        </member>
        <member name="M:ProVagas.Repositories.StatusInscricaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um status de inscrição existente
            </summary>
            <param name="id">Id do status de inscrição que será deletado</param>
        </member>
        <member name="M:ProVagas.Repositories.StatusInscricaoRepository.Listar">
            <summary>
            Lista todos os status de inscrição
            </summary>
            <returns>Uma lista com os status de inscrição</returns>
        </member>
        <member name="M:ProVagas.Repositories.StatusInscricaoRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um status de inscrição através do ID
            </summary>
            <param name="id">ID do status de inscrição quer será buscada</param>
            <returns>O status de inscrição buscado</returns>
        </member>
    </members>
</doc>
